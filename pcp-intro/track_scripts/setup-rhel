#!/bin/bash
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
   echo "Waiting for Instruqt to finish booting the VM"
   sleep 1
done

#dnf remove -y google-rhui-client-rhel9.noarch
dnf clean all
subscription-manager config --rhsm.manage_repos=1
subscription-manager register --activationkey=Instruqt_system_registration --org=12451665 --force
dnf groupinstall -y "Development Tools"
dnf install ansible rhel-system-roles
dnf update -y

#Download the SQL Query script
mkdir /root/Scripts/


#Download the install script and run it
curl -o /root/install_sql.sh https://raw.githubusercontent.com/rhel-labs/learn-katacoda/master/pcp-intro/install_sql2019.sh
sudo chmod +x ./install_sql.sh

sudo ./install_sql.sh &>> /root/post-run.log
export HOSTNAME=`hostname --all-fqdns`

firewall-cmd --zone=public --add-service=https --permanent
firewall-cmd --reload

systemctl --now enable httpd

#Install python and unixODBC dependant packages
sudo dnf install gcc-c++ python3-devel unixODBC-devel -y
sudo pip3 install pyodbc

#Create a done file to signal we have finished
touch /root/post-run.log.done

n=1
GREEN='\033[0;32m' 
NC='\033[0m' # No Color

while [ ! -f /root/post-run.log.done ] ;
do
      if test "$n" = "1"
      then
	    clear
            n=$(( n+1 ))	 # increments $n
      else
	    printf "."
      fi
      sleep 2
done
clear
echo -e "${GREEN}Ready to start your scenario${NC}"


### Changelog ###
#
#  20220624 - Eric
#    - exchanged wget commands for instruqt file operations
#    - replaced install script for SQL System Role
#    - 
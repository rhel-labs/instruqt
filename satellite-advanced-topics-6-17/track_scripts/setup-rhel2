#!/bin/bash
set -euxo pipefail

until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]; do
    echo "Waiting for instruqt bootstrap to complete"
    sleep 1
done

subscription-manager register --activationkey=${ACTIVATION_KEY} --org=12451665 --force

dnf install wireguard-tools -y

subscription-manager unregister

# Create a stock wg0.conf.
cat <<EOT > /etc/wireguard/wg0.conf
[Interface]
Address = 192.0.2.3/24
PrivateKey = 4MNE07Auu6f2L6ahmYoXB332H+lxQupBQjOP+aAX7UI=
DNS = 192.0.2.1

[Peer]
PublicKey = 1Y7yWRJZxLK3kKKwGLPffsSf/E2nw6mxHg+yvnfvOV4=
AllowedIPs = 192.0.2.0/24
Endpoint = 10.128.0.14:51820
PersistentKeepalive = 20
EOT

# Edit the wireguard if wg0 to point at satellite's ip. Satellite's IP is dynamic. Then create the interface with nmcli.
sed -i "/^Endpoint /s/=.*$/= satellite.${_SANDBOX_ID}.svc.cluster.local:51820/" /etc/wireguard/wg0.conf

nmcli connection import type wireguard file /etc/wireguard/wg0.conf

cat <<EOT >> /etc/systemd/system/wg-startup.service
[Unit]
Description=Start up wireguard.
After=default.target

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/wg-startup.sh

[Install]
WantedBy=default.target
EOT

cat <<EOT >> /usr/local/sbin/wg-startup.sh
#!/bin/bash
nmcli con up wg0
wg syncconf wg0 /etc/wireguard/wg0.conf
EOT

chmod 700 /usr/local/sbin/wg-startup.sh
restorecon -Fvvv /usr/local/sbin/wg-startup.sh
systemctl enable wg-startup

hostnamectl set-hostname rhel2.lab
cat <<EOT >> /etc/hosts
192.0.2.3 rhel2.lab rhel2
EOT

## Disable partial images.  Fixes the zstd:chunkedcd / bugzilla that will brick the box if run on this lab
## Related to https://github.com/bootc-dev/bootc/issues/1204
sed -ie 's/enable_partial_images = "true"/enable_partial_images = "false"/' /etc/containers/storage.conf

## Convert the system to Image Mode
podman run --rm --privileged -v /dev:/dev -v /var/lib/containers:/var/lib/containers -v /:/target --pid=host --security-opt label=type:unconfined_t quay.io/toharris/rhel-bootc:instruqt-wg bootc install to-existing-root --root-ssh-authorized-keys /target/root/.ssh/authorized_keys --acknowledge-destructive

## Stage existing wg0.conf in next deploy so it exists on boot
cp /etc/wireguard/wg0.conf /ostree/deploy/default/deploy/*/etc/wireguard/

## Populate the rc.local to check for wg0 nmconnection and import/up if it doesnâ€™t exist
## reboot again to make sure it comes up on reboots when condition is true
cat <<EOT >> /ostree/deploy/default/deploy/*/etc/rc.d/rc.local
if [ ! -e "/etc/NetworkManager/system-connections/wg0.nmconnection" ]; then
 nmcli connection import type wireguard file /etc/wireguard/wg0.conf
 nmcli connection up wg0
fi
EOT

## Make sure rc.local executable
chmod +x /ostree/deploy/default/deploy/*/etc/rc.d/rc.local

## Reboot system 
reboot